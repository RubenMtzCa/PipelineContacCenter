final architectDir                  = 'architect'
final architectScriptingDir         = 'architect-scripting'
final architectScriptingExamplesDir = 'architect-scripting-examples'
final architectToolsDir             = 'architect-tools'
final buildWebAppDir                = 'build-web-app'
final frescoDir                     = 'fresco'
final npmUtilsDir                   = 'npm-utils'

final architectRepo                  = 'git@bitbucket.org:inindca/architect.git'
final architectScriptingRepo         = 'git@bitbucket.org:inindca/architect-scripting.git'
final architectScriptingExamplesRepo = 'git@bitbucket.org:inindca/architect-scripting-examples.git'
final architectToolsRepo             = 'git@bitbucket.org:inindca/architect-tools.git'
final frescoRepo                     = 'git@bitbucket.org:inindca/fresco.git'
final npmUtilsRepo                   = 'git@bitbucket.org:inindca/npm-utils.git'
final buildWebAppRepo                = 'git@bitbucket.org:inindca/build-deploy-web-app.git'

def checkoutRepo(repoName, branch='*/master', noTags=true, shallow=true) {
    checkout changelog: false, poll: false,
        scm: [$class: 'GitSCM', branches: [[name: branch]],
        doGenerateSubmoduleConfigurations: false, 
        extensions: 
            [[$class: 'CloneOption', depth: 0, noTags: noTags, reference: '', shallow: shallow]], 
        submoduleCfg: [],
        userRemoteConfigs: 
            [[credentialsId: 'd54fed6f-51d4-4b17-9da6-db39861576c0', url: repoName]]]
}
pipeline{
    agent {
        node {
            label 'dev_mesos'
        }
    }
    parameters {
        booleanParam(name: 'stage_build', defaultValue: false, description: 'If the build passes tests kick off the stage build.')
    }
    stages { 
        stage('Setup') {
            steps {
                // Clean workspace before starting
                deleteDir()
                /*   Checkout All Repos */
                script {
                    dir(npmUtilsDir) {
                        checkoutRepo(npmUtilsRepo)
                    }
                }
                script {
                    dir(buildWebAppDir) {
                        checkoutRepo(buildWebAppRepo)
                    }
                }
                script {
                    dir(frescoDir) {
                        checkoutRepo(frescoRepo)
                    }
                }
                script {
                    dir(architectScriptingExamplesDir) {
                        checkoutRepo(architectScriptingExamplesRepo)
                    }   
                }
                script {
                    dir(architectToolsDir) {
                        checkoutRepo(architectToolsRepo)
                    }
                }
                script {
                     dir(architectDir) {
                        // Is being checked out this way so that git does not get a detached head
                        git url: architectRepo,
                            credentialsId: '7c2a5698-a932-447a-9727-6852d0994ea0',
                            branch: 'master'
                    }
                }
                script {
                     dir(architectScriptingDir) {
                        // Is being checked out this way so that git does not get a detached head 
                        git url: architectScriptingRepo,
                            credentialsId: '7c2a5698-a932-447a-9727-6852d0994ea0',
                            branch: 'master'
                    }
                }
                script {
                    nodejs('NodeJS 8.11.1') {
                          dir(architectDir) {
                            // Installing npm dependencies for architect, fresco, architect-tools
                            sh '''
                                source $WORKSPACE/build-web-app/before-build.sh
                                source $WORKSPACE/npm-utils/scripts/jenkins-pre-build.sh 8.11.1
                                echo npm registry is set to:
                                npm config get registry
                                export PATH=\"`pwd`/node_modules/.bin\":$PATH
                                export PATH=\"$WORKSPACE/architect-tools/bin\":$PATH
                                npm install
                            '''
                        }
                        script {
                            dir(architectToolsDir) {
                                sh '''
                                    npm install
                                '''
                            }
                            dir(architectScriptingDir) {
                                sh '''
                                    npm install
                                '''
                            }
                            dir(frescoDir) {
                                sh '''
                                    npm install
                                '''
                            }
                        }
                    }
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    nodejs('NodeJS 8.11.1') {
                        dir(architectDir) {
                            sh '''
                                alias grunt=\'node --max-old-space-size=4096 $WORKSPACE/architect/node_modules/.bin/grunt\'
                                grunt updateDeveloperToolsScripting
                                grunt updateBuildScripting
                            '''
                        }
                    }
                }
            }
        }
        stage('Test') {
            steps {
                nodejs('NodeJS 8.11.1'){
                    // This will create the org and then run the mocha tests
                    script {
                        dir(architectScriptingDir) {
                            sh '''
                                cd ./test/resources
                                $WORKSPACE/fresco/bin/fresco --env dca
                                cd ..
                                export PATH=\"$WORKSPACE/architect-tools/bin\":$PATH
                                arc configure -d
                                cd $WORKSPACE/architect-scripting/test
                                SCRIPTING_AUTH_TOKEN=\$(arc getScriptingApiToken --frescoOrgConfigPath $WORKSPACE/architect-scripting/test/resources/dcaStaticOrgOrg.json) JUNIT_REPORT_PATH=$WORKSPACE/architect-scripting/test/report.xml $WORKSPACE/architect-scripting/node_modules/mocha/bin/mocha scriptingFlow.test.js --timeout 99999 --exit --reporter mocha-jenkins-reporter
                            '''
                        }
                    }
                }
            }
        }
        stage('Push to Bitbucket') {
            steps {
                script {
                    dir(architectDir) {
                        // Now that we have passed the tests we can push up build changes
                        sshagent(['7c2a5698-a932-447a-9727-6852d0994ea0']) {
                             sh '''
                                git config --global user.name \"purecloudjenkins\"
                                git config --global user.email \"purecloud-jenkins@ininica.com\"
                                git add src
                                git add package.json
                                git commit -m \'CA-5982: scripting_build\' || echo \'Nothing to see here\'
                                git push origin master || echo \'Nothing to see here\'
                            '''
                        } 
                    }
                }

                script {
                    dir(architectScriptingDir) {
                        // Now that we have passed the tests we can push up build changes
                        sshagent(['7c2a5698-a932-447a-9727-6852d0994ea0']) {
                            sh '''
                                git config --global user.name \"purecloudjenkins\"
                                git config --global user.email \"purecloud-jenkins@ininica.com\"
                                git add src
                                git add build-scripting
                                git add build-browserify
                                git add package.json
                                git commit -m \'CA-5982: scripting_build\' || echo \'Nothing to see here\'
                                git push origin master || echo \'Nothing to see here\'
                            '''
                        }
                    }
                }
            }
        }
        // This will stage architect scripting to be deployed to prod.
        stage('Staging') {
            when {
                expression { params.stage_build == true }
            }
            steps {
                 nodejs('NodeJS 8.11.1') {
                    dir(architectDir) {
                        // We are getting creds and starting an ssh agent so that we can use git natively and pass those creds into
                        // the grunt call.
                        withCredentials([usernamePassword(credentialsId: 'd54fed6f-51d4-4b17-9da6-db39861576c0', passwordVariable: 'JIRA_API_TOKEN', usernameVariable: 'JIRA_USERNAME')]) {
                             sshagent(['7c2a5698-a932-447a-9727-6852d0994ea0']) { 
                                 // This will run grunt stageScripting
                                sh '''
                                    git config --global user.name purecloudjenkins
                                    git config --global user.email \"purecloud-jenkins@ininica.com\"
                                    export PATH=\"$WORKSPACE/architect-tools/bin\":$PATH
                                    alias grunt=\'node --max-old-space-size=4096 $WORKSPACE/architect/node_modules/.bin/grunt\'
                                    grunt stageScripting --typeToBump=automatic --jiraUserName=$JIRA_USERNAME --jiraPassword=$JIRA_API_TOKEN --bitbucketUserName=$JIRA_USERNAME --bitbucketPassword=$JIRA_API_TOKEN
                                    git checkout -b CA-5982-$BUILD_NUMBER-stage-update
                                    git add src
                                    git add package.json
                                    git commit -m \'CA-5982: stage_scripting_build\' || echo \'Nothing to see here\'
                                    git push origin CA-5982-$BUILD_NUMBER-stage-update || echo \'Nothing to see here\'
                                    echo \"Taking screenshot\"
                                    $WORKSPACE/architect/node_modules/puppeteer/.local-chromium/linux-599821/chrome-linux/chrome -headless --disable-gpu --window-size=3000,1080 --screenshot --force-device-scale-factor=1.5 file:///$WORKSPACE/architect-scripting/src/scripting/documentation/changelog.html
                                '''
                            }
                        }
                    }
                    dir(architectScriptingDir) {
                        sshagent(['7c2a5698-a932-447a-9727-6852d0994ea0']) {
                            // This will commit all the staged changes for architect-scripting
                            sh '''
                                git config --global user.name \"purecloudjenkins\"
                                git config --global user.email \"purecloud-jenkins@ininica.com\"
                                git checkout -b CA-5982-$BUILD_NUMBER-stage-update
                                git add src
                                git add build-scripting
                                git add package.json
                                git commit -m \'CA-5982: stage_scripting_build\' || echo \'Nothing to see here\'
                                git push origin CA-5982-$BUILD_NUMBER-stage-update || echo \'Nothing to see here\'
                            '''
                        }
                        withCredentials([usernamePassword(credentialsId: 'd54fed6f-51d4-4b17-9da6-db39861576c0', passwordVariable: 'JIRA_API_TOKEN', usernameVariable: 'JIRA_USERNAME')]) {
                            // Create the pull requests for both architect-scripting and architect
                            sh '''
                                cd $WORKSPACE/architect-scripting
                                $WORKSPACE/architect-tools/bin/arc createPullRequest --repo architect-scripting --branch_name CA-5982-$BUILD_NUMBER-stage-update -u $JIRA_USERNAME -p $JIRA_API_TOKEN --reviewers jimullyot,scottbauer,scottbrookie -d \"https://jenkins.ininica.com/job/architect-scripting-pipeline/184/execution/node/3/ws/architect/screenshot.png\"
                                cd $WORKSPACE/architect
                                $WORKSPACE/architect-tools/bin/arc createPullRequest --repo architect --branch_name CA-5982-$BUILD_NUMBER-stage-update -u $JIRA_USERNAME -p $JIRA_API_TOKEN --reviewers jimullyot,scottbauer,scottbrookie -d \"https://jenkins.ininica.com/job/architect-scripting-pipeline/184/execution/node/3/ws/architect/screenshot.png\"
                            '''
                        }
                    }
                 }
            }
        }
    }
}